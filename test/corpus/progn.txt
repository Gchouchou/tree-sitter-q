===
progn many statements
===
a;b;c;d
---

(program
  (progn
    (variable
      (identifier))
    (semicolon)
    (variable
      (identifier))
    (semicolon)
    (variable
      (identifier))
    (semicolon)
    (variable
      (identifier))))

====
multiline progn
====
1+
 2; 3
---

(program
  (progn
    (func_app
      (number)
      (builtin_infix_func)
      (newline_extra)
      (number))
    (semicolon)
    (number)))

===
2 lines progn
===
1+1
2+2
---

(program
  (progn
    (func_app
      (number)
      (builtin_infix_func)
      (number)))
  (progn
    (func_app
      (number)
      (builtin_infix_func)
      (number))))

===
progn with comment
===
1+ / comment
 2
---

(program
  (progn
    (func_app
      (number)
      (builtin_infix_func)
      (comment)
      (newline_extra)
      (number))))

===
progn through a comment
===
1+ / comment1
 /a line here with comment
 2
---

(program
  (progn
    (func_app
      (number)
      (builtin_infix_func)
      (comment)
      (newline_extra)
      (comment)
      (newline_extra)
      (number))))

===
progn through empty lines
===
1+

 1
---

(program
  (progn
    (func_app
      (number)
      (builtin_infix_func)
      (newline_extra)
      (newline_extra)
      (number))))

===
progn through empty lines, comments and a normal comment
===
1+

/
a
\
/ comment
 1
---

(program
  (progn
    (func_app
      (number)
      (builtin_infix_func)
      (newline_extra)
      (comment_block)
      (comment)
      (newline_extra)
      (number))))

===
number list through empty lines, comments and a normal comment
===
1

/
a
\
/ comment
 1
---

(program
  (progn
    (number_list
      (number)
      (newline_extra)
      (comment_block)
      (comment)
      (newline_extra)
      (number))))

===
fake progn
===
[a:23;b:34;b]
---

(program
  (progn
    (bracket_progn
      (func_app
        (variable
          (identifier))
        (assignment_func)
        (number))
      (semicolon)
      (func_app
        (variable
          (identifier))
        (assignment_func)
        (number))
      (semicolon)
      (variable
        (identifier)))))

===
fake progn with cond
===
$[x<1;[x:3;x];
 x>1;34;
 65]
---

(program
  (progn
    (func_app
      (builtin_infix_func)
      (parameter_pass
        (func_app
          (variable
            (identifier))
          (builtin_infix_func)
          (number))
        (semicolon)
        (bracket_progn
          (func_app
            (variable
              (identifier))
            (assignment_func)
            (number))
          (semicolon)
          (variable
            (identifier)))
        (semicolon)
        (newline_extra)
        (func_app
          (variable
            (identifier))
          (builtin_infix_func)
          (number))
        (semicolon)
        (number)
        (semicolon)
        (newline_extra)
        (number)))))

===
Possible fake progn issue
===
{[ab;34;aaa] +1}
---

(program
      (progn
        (func_definition
          (parameter_pass
            (variable
              (identifier))
            (semicolon)
            (number)
            (semicolon)
            (variable
              (identifier)))
          (func_body
            (builtin_infix_func))
          (ERROR
            (number)))))
